name: "Deploy Frontend to CloudFront with S3"
description: "Upload Frontend to S3 and invalidate Cache on CloudFront"

inputs:
  aws-region:
    required: true
    description: "The region of AWS"
  aws-role-to-assume:
    required: true
    description: "The ARN role"
  aws-role-session-name:
    required: true
    description: "The role session name"
  s3-bucket-name:
    required: true
    description: "The name of S3 Bucket"
  s3-bucket-region:
    required: true
    description: "The region of S3 Bucket"
  frontend-build-path:
    required: true
    description: "The path of static file from building frontend"
  cloudfront-id:
    required: true
    description: "The ID of CloudFront"
  invalidation-cache-path:
    required: false
    description: "The path to invalidate cache"
    default: /*
  environtment:
    required: true
    description: "Environtment is prd for use manual-approve"
  manual-approve:
    required: false
    description: "User in nxz-group for approve"
    default: "false"
  approvers:
    required: false
    description: "User in nxz-group for approve"
  github-app-token:
    required: false
    description: "Github app token"
  download-artifact:
    required: true
    description: 'Enable/Disable download artifact'
    default: "false"
runs:
  using: composite
  steps:
    - name: Download artifact ${{ inputs.frontend-build-path }}
      uses: actions/download-artifact@v4
      if: ${{ inputs.download-artifact == 'true' }}
      with:
        name: ${{ inputs.frontend-build-path }}
        path: ./${{ inputs.frontend-build-path }}

    - name: List view file
      run: |
        echo 'files<<EOF' >> $GITHUB_OUTPUT
        ls -l ./${{ inputs.frontend-build-path }} >> $GITHUB_OUTPUT
        echo 'EOF' >> $GITHUB_OUTPUT
      id: view-file
      shell: bash

    - name: manual-approve
      uses: nxz-group/manual-approve-action@main
      if: inputs.environtment == 'prd' && inputs.manual-approve == 'true'
      with:
        secret: ${{ inputs.github-app-token }}
        approvers: ${{ inputs.approvers }}
        minimum-approvals: 1
        issue-title: "Deploy frontend environment: ${{ inputs.environtment }}"
        issue-body: |
          ### Build files output
          ```
          ${{ steps.view-file.outputs.files }}
          ```
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ inputs.aws-region }}
        role-to-assume: ${{ inputs.aws-role-to-assume }}
        role-session-name: ${{ inputs.aws-role-session-name }}

    - name: Upload to S3 Bucket
      shell: bash
      run: |
        aws s3 sync --delete ./${{ inputs.frontend-build-path }} s3://${{ inputs.s3-bucket-name }} --region ${{ inputs.s3-bucket-region }}
        
    - name: Invalidate CloudFront Cache
      shell: bash
      run: |
        aws configure set preview.cloudfront true
        aws cloudfront create-invalidation --distribution-id ${{ inputs.cloudfront-id }} --paths "${{ inputs.invalidation-cache-path }}"